# flyctl launch added from .gitignore
# Byte-compiled / optimized / DLL files
**/__pycache__
**/*.py[cod]
**/*$py.class

# C extensions
**/*.so

# Distribution / packaging
**/.Python
**/build
**/develop-eggs
**/dist
**/downloads
**/eggs
**/.eggs
**/lib
**/lib64
**/parts
**/sdist
**/var
**/wheels
**/share/python-wheels
**/*.egg-info
**/.installed.cfg
**/*.egg
**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
**/*.manifest
**/*.spec

# Installer logs
**/pip-log.txt
**/pip-delete-this-directory.txt

# Unit test / coverage reports
**/htmlcov
**/.tox
**/.nox
**/.coverage
**/.coverage.*
**/.cache
**/nosetests.xml
**/coverage.xml
**/*.cover
**/*.py,cover
**/.hypothesis
**/.pytest_cache
**/cover

# Translations
**/*.mo
**/*.pot

# Django stuff:
**/*.log
**/local_settings.py
**/db.sqlite3
**/db.sqlite3-journal

# Flask stuff:
**/instance
**/.webassets-cache

# Scrapy stuff:
**/.scrapy

# Sphinx documentation
**/docs/_build

# PyBuilder
**/.pybuilder
**/target

# Jupyter Notebook
**/.ipynb_checkpoints

# IPython
**/profile_default
**/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
**/__pypackages__

# Celery stuff
**/celerybeat-schedule
**/celerybeat.pid

# SageMath parsed files
**/*.sage.py

# Environments
**/.env
**/.venv
**/env
**/venv
**/ENV
**/env.bak
**/venv.bak

# Spyder project settings
**/.spyderproject
**/.spyproject

# Rope project settings
**/.ropeproject

# mkdocs documentation
site

# mypy
**/.mypy_cache
**/.dmypy.json
**/dmypy.json

# Pyre type checker
**/.pyre

# pytype static type analyzer
**/.pytype

# Cython debug symbols
**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# flyctl launch added from env/.gitignore
# Created by venv; see https://docs.python.org/3/library/venv.html
env/**/*

# flyctl launch added from municode-scraper/.gitignore
municode-scraper/**/temp

# Byte-compiled / optimized / DLL files
municode-scraper/**/__pycache__
municode-scraper/**/*.py[cod]
municode-scraper/**/*$py.class

# C extensions
municode-scraper/**/*.so

# Distribution / packaging
municode-scraper/**/.Python
municode-scraper/**/build
municode-scraper/**/develop-eggs
municode-scraper/**/dist
municode-scraper/**/downloads
municode-scraper/**/eggs
municode-scraper/**/.eggs
municode-scraper/**/lib
municode-scraper/**/lib64
municode-scraper/**/parts
municode-scraper/**/sdist
municode-scraper/**/var
municode-scraper/**/wheels
municode-scraper/**/share/python-wheels
municode-scraper/**/*.egg-info
municode-scraper/**/.installed.cfg
municode-scraper/**/*.egg
municode-scraper/**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
municode-scraper/**/*.manifest
municode-scraper/**/*.spec

# Installer logs
municode-scraper/**/pip-log.txt
municode-scraper/**/pip-delete-this-directory.txt

# Unit test / coverage reports
municode-scraper/**/htmlcov
municode-scraper/**/.tox
municode-scraper/**/.nox
municode-scraper/**/.coverage
municode-scraper/**/.coverage.*
municode-scraper/**/.cache
municode-scraper/**/nosetests.xml
municode-scraper/**/coverage.xml
municode-scraper/**/*.cover
municode-scraper/**/*.py,cover
municode-scraper/**/.hypothesis
municode-scraper/**/.pytest_cache
municode-scraper/**/cover

# Translations
municode-scraper/**/*.mo
municode-scraper/**/*.pot

# Django stuff:
municode-scraper/**/*.log
municode-scraper/**/local_settings.py
municode-scraper/**/db.sqlite3
municode-scraper/**/db.sqlite3-journal

# Flask stuff:
municode-scraper/**/instance
municode-scraper/**/.webassets-cache

# Scrapy stuff:
municode-scraper/**/.scrapy

# Sphinx documentation
municode-scraper/**/docs/_build

# PyBuilder
municode-scraper/**/.pybuilder
municode-scraper/**/target

# Jupyter Notebook
municode-scraper/**/.ipynb_checkpoints

# IPython
municode-scraper/**/profile_default
municode-scraper/**/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
municode-scraper/**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
municode-scraper/**/__pypackages__

# Celery stuff
municode-scraper/**/celerybeat-schedule
municode-scraper/**/celerybeat.pid

# SageMath parsed files
municode-scraper/**/*.sage.py

# Environments
municode-scraper/**/.env
municode-scraper/**/.venv
municode-scraper/**/env
municode-scraper/**/venv
municode-scraper/**/ENV
municode-scraper/**/env.bak
municode-scraper/**/venv.bak

# Spyder project settings
municode-scraper/**/.spyderproject
municode-scraper/**/.spyproject

# Rope project settings
municode-scraper/**/.ropeproject

# mkdocs documentation
municode-scraper/site

# mypy
municode-scraper/**/.mypy_cache
municode-scraper/**/.dmypy.json
municode-scraper/**/dmypy.json

# Pyre type checker
municode-scraper/**/.pyre

# pytype static type analyzer
municode-scraper/**/.pytype

# Cython debug symbols
municode-scraper/**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
fly.toml
